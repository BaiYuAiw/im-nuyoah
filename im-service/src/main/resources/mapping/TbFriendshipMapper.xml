<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sugarpocket.im.service.friendship.dao.mapper.TbFriendshipMapper">

    <resultMap id="BaseResultMap" type="com.sugarpocket.im.service.friendship.dao.entity.TbFriendshipEntity">
        <id property="appId" column="app_id" jdbcType="INTEGER"/>
        <id property="sendId" column="send_id" jdbcType="VARCHAR"/>
        <id property="receiverId" column="receiver_id" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="black" column="black" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="BIGINT"/>
        <result property="friendSequence" column="friend_sequence" jdbcType="BIGINT"/>
        <result property="blackSequence" column="black_sequence" jdbcType="BIGINT"/>
        <result property="addSource" column="add_source" jdbcType="VARCHAR"/>
        <result property="extra" column="extra" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        app_id
        ,send_id,receiver_id,
        remark,status,black,
        create_time,friend_sequence,black_sequence,
        add_source,extra
    </sql>
    <select id="checkFriendShipSingle" resultType="com.sugarpocket.im.service.friendship.dao.resp.CheckFriendShipResp">
        select send_id as sendId, receiver_id as receiverId, if(status = 1,1,0) as status
        from tb_friendship
        where app_id = #{appId} and send_id = #{sendId} and receiver_id in
        <foreach collection='receiverIds' index='index' item='id' separator=',' open='(' close=')'>
            #{id}
        </foreach>
    </select>
    <select id="checkFriendShipBoth"
            resultType="com.sugarpocket.im.service.friendship.dao.resp.CheckFriendShipResp">
        select a.sendId , a.toId, (
        case
        when a.status = 1 and b.status = 1 then 1
        when a.status = 1 and b.status != 1 then 2
        when a.status != 1 and b.status = 1 then 3
        when a.status != 1 and b.status != 1 then 4
        end) as status from (
        select send_id as sendId , receiver_id as toId, if(status = 1,1,0) as status
        from im_friendship
        where app_id = #{appId} send_id = #{sendId } and receiver_id in
        <foreach collection='receiverIds' index='index' item='id' separator=',' open='(' close=')'>
            #{id}
        </foreach>
        ) as a inner join (
        select send_id as sendId , receiver_id as toId, if(status = 1,1,0) as status
        from im_friendship
        where app_id = #{appId} receiver_id = #{sendId } and send_id in
        <foreach collection='receiverIds' index='index' item='id' separator=',' open='(' close=')'>
            #{id}
        </foreach>
        ) as b
        on a.sendId = b.toId and b.sendId = a.toId
    </select>
</mapper>
